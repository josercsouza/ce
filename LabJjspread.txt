--------------------------------- v 4.7.2 -- Jul, 13 2021
- @types/jspreadsheet-ce/index.d.ts
linhas
+125    'number'

 440	value: CellValue,
+441	oldValue: CellValue

 535	onundo?: Function | undefined;
+536	/** On any event is applied */
+537    // tslint:disable-next-line ban-types
+538	onevent?: Function | undefined;

 653	wordWrap?: boolean | undefined;
+654    /** Define the number of freeze columns on left with tableOverflow=true */
+655    freezeColumns?:number | undefined;
+656    /** Include headers on copy cells */
+657    includeHeadersOnCopy?: boolean | undefined;

--------------------------------- v 4.9.5 -- Nov, 22 2021
- node_modules\jspreadsheet-ce\dist\index.js
+/- linha 13065
        obj.updateFreezePosition = function() {
            scrollLeft = obj.content.scrollLeft;
            var width = 0;
            if (scrollLeft > 50) {
                for (var i = 0; i < obj.options.freezeColumns; i++) {
                    if (i > 0) {
                        // width += parseInt(obj.options.columns[i-1].width);
                        // Must check if the previous column is hidden or not to determin whether the width shoule be added or not!
                        if (obj.options.columns[i - 1].type !== "hidden") {
                            width += parseInt(obj.options.columns[i - 1].width);
                        }
                    }
                    obj.headers[i].classList.add('jexcel_freezed');
                    obj.headers[i].style.left = width + 'px';
                    for (var j = 0; j < obj.rows.length; j++) {
                        if (obj.rows[j] && obj.records[j][i]) {
                            // var shifted = (scrollLeft + (i > 0 ? obj.records[j][i-1].style.width : 0)) - 51 + 'px';
                            var indexColumnWidth = (obj.table.classList.contains('jexcel_hidden_index') ? 1 : 51)
                            var shifted = (scrollLeft + (i > 0 ? obj.records[j][i-1].style.width : 0)) - indexColumnWidth + 'px';
                            obj.records[j][i].classList.add('jexcel_freezed');
                            obj.records[j][i].style.left = shifted;
                        }
                    }
                }
            } else {
                for (var i = 0; i < obj.options.freezeColumns; i++) {
                    obj.headers[i].classList.remove('jexcel_freezed');
                    obj.headers[i].style.left = '';
                    for (var j = 0; j < obj.rows.length; j++) {
                        if (obj.records[j][i]) {
                            obj.records[j][i].classList.remove('jexcel_freezed');
                            obj.records[j][i].style.left = '';
                        }
                    }
                }
            }

            // Place the corner in the correct place
            obj.updateCornerPosition();
        }

+/- linha 7147
       var validDate = function(date) {
            date = ''+date;
            if (date.substr(4,1) == '-' && date.substr(7,1) == '-') {
                return true;
            } else {
                date = date.split('-');
                if ((date[0].length == 4 && date[0] == Number(date[0]) && date[1].length == 2 && date[1] == Number(date[1]))) {
                    return true;
                }
            }
            return false;
        }
	
+/- linha 7213
                    // Try formatted date
                    var formatted = null;
                    if (! validDate(value)) {
                        var tmp = jSuites.calendar.extractDateFromString(value, obj.options.columns[i].options.format);
                        if (tmp) {
                            formatted = tmp;
                        }
                    }
                    // Create calendar cell

+/- linha 8461
                        // Try formatted date
                        var formatted = null;
                        if (! validDate(value)) {
                            var tmp = jSuites.calendar.extractDateFromString(value, obj.options.columns[x].options.format);
                            if (tmp) {
                                formatted = tmp;
                            }
                        }
                        // Update data and cell

+/- linha 9731
                // Test order
                var temp = [];
                if (obj.options.columns[column].type == 'numeric' || obj.options.columns[column].type == 'number' || obj.options.columns[column].type == 'percentage' || obj.options.columns[column].type == 'autonumber' || obj.options.columns[column].type == 'color') {
                    for (var j = 0; j < obj.options.data.length; j++) {

================================
ESTUDOS
================================

instance.thead.firstElementChild.children[x].style.backgroundColor = "red";

colocar a seta de order na esquerda quando a coluna for alinhada a direita (serve para up/down)

element.style {
    text-align: right;
    background-position: left center;
}

----------

.jexcel > thead > tr > td.arrow-down {
    background-repeat: no-repeat;
    background-position: center right 5px;
    background-image: url("data:image/svg+xml,%0A%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath fill='none' d='M0 0h24v24H0V0z'/%3E%3Cpath d='M7 10l5 5 5-5H7z' fill='gray'/%3E%3C/svg%3E");
    text-decoration: underline;
}